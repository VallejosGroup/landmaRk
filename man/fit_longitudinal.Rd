% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/longitudinal.R
\name{fit_longitudinal}
\alias{fit_longitudinal}
\title{Fits the specified longitudinal model for time-varying covariates up to
the landmark times}
\usage{
fit_longitudinal(
  x,
  landmarks,
  method,
  formula,
  dynamic_covariates,
  cores = getOption("Ncpus", 1L),
  ...
)
}
\arguments{
\item{x}{An object of class \code{\link{LandmarkAnalysis}}.}

\item{landmarks}{A vector of Landmark times.}

\item{method}{Either \code{"lcmm"} or \code{"lme4"} or a function for fitting
a longitudinal data model, where the first argument is a formula, and also
has a \code{data} argument.}

\item{formula}{A formula to be used in longitudinal sub-model fitting.}

\item{dynamic_covariates}{Vector of time-varying covariates to be modelled
as the outcome of a longitudinal model.}

\item{cores}{Number of cores/threads to be used for parallel computation on
Linux and MacOS. Defaults to either \code{options("Ncpus")} if set, or 1
(single threaded) otherwise. Only single-threaded computation is currently
supported on Windows.}

\item{...}{Additional arguments passed to the longitudinal model fitting
function (e.g. number of classes/clusters for lcmm).}
}
\value{
An object of class \code{\link{LandmarkAnalysis}}.
}
\description{
Fits the specified longitudinal model for time-varying covariates up to
the landmark times
}
\details{
\subsection{Parallel processing}{

As the longitudinal model for each landmark time is independent of
the longitudinal models for other landmark times, parallel processing can
be used to vastly speed up computation. However, due to issues with
parallel processing in R, currently only Unix-like operating systems
are supported by \code{landmaRk}.
}
}
\seealso{
\code{\link[lcmm:lcmm]{lcmm::lcmm()}} and \code{\link[lme4:lmer]{lme4::lmer()}} for additional arguments.
}
