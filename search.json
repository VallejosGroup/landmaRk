[{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://vallejosgroup.github.io/landmarkR/articles/landmarkR.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Introduction to the landmarkR package","text":"vignette, use dataset epileptic perform landmarking analysis time--event data time-varying covariates. structure dataset. dataset contains following variables: id: unique patient identifier time: time time-varying covariate “dose” recorded .time: time first event censoring happened .status: indicates whether event (1) censoring (0) occurered dose: time-varying covariate treat, age, gender, learn.dis: static (baseline) covariates first step split dataset two, one containing static covariates, event time indicator event/censoring, another one containing dynamic covariates.","code":"data(\"epileptic\") str(epileptic) #> 'data.frame':    2797 obs. of  9 variables: #>  $ id         : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ time       : int  86 119 268 451 535 770 1515 1829 2022 2194 ... #>  $ with.time  : int  2400 2400 2400 2400 2400 2400 2400 2400 2400 2400 ... #>  $ with.status: int  0 0 0 0 0 0 0 0 0 0 ... #>  $ dose       : num  2 2 2 2.67 2.67 2.67 2.67 2.67 3.33 2.67 ... #>  $ treat      : Factor w/ 2 levels \"CBZ\",\"LTG\": 1 1 1 1 1 1 1 1 1 1 ... #>  $ age        : num  75.7 75.7 75.7 75.7 75.7 ... #>  $ gender     : Factor w/ 2 levels \"F\",\"M\": 2 2 2 2 2 2 2 2 2 2 ... #>  $ learn.dis  : Factor w/ 2 levels \"No\",\"Yes\": 1 1 1 1 1 1 1 1 1 1 ... # DF with Static covariates df_static <- epileptic |>   select(id, with.time, with.status, treat, age, gender, learn.dis) |>   rename(patient_id = id, event.time = with.time, event.status = with.status) |>   unique() df_static$age <- (df_static$age - mean(df_static$age))/sd(df_static$age)  head(df_static) #>    patient_id event.time event.status treat        age gender learn.dis #> 1           1       2400            0   CBZ  2.0412717      M        No #> 12          2       2324            0   LTG -0.2432669      M        No #> 25          3        802            0   LTG -0.4385038      M        No #> 29          4       2364            0   CBZ  0.3788165      M        No #> 42          5        821            1   LTG  0.1659281      F        No #> 45          6       2237            0   LTG -0.5053657      M       Yes # DF with Dynamic covariates df_dynamic <- epileptic |>   select(id, time, dose) |>   mutate(covariate = \"dose\") |>   rename(patient_id = id, times = time, measurements = dose, covariates = covariate)  head(df_dynamic) #>   patient_id times measurements covariates #> 1          1    86         2.00       dose #> 2          1   119         2.00       dose #> 3          1   268         2.00       dose #> 4          1   451         2.67       dose #> 5          1   535         2.67       dose #> 6          1   770         2.67       dose"},{"path":"https://vallejosgroup.github.io/landmarkR/articles/landmarkR.html","id":"create-landmarking-object","dir":"Articles","previous_headings":"","what":"Create Landmarking object","title":"Introduction to the landmarkR package","text":"Next step create object class Landmarking, using helper function name. Arguments helper function following: data_static data_dynamic: two datasets just created. event_indicator: name column indicates censoring indicator static dataset. dynamic_covariates: array column names dynamic dataset indicating time-varying covariates. ids: name column identifies patients datasets. event_time: name column identifies time event/censoring static dataset.","code":"landmarking_object <- Landmarking(   data_static = df_static,   data_dynamic = df_dynamic,   event_indicator = \"event.status\",   dynamic_covariates = \"dose\",   ids = \"patient_id\",   event_time = \"event.time\",   times = \"times\",   measurements = \"measurements\",   dynamic_covariate_names = \"covariates\" )"},{"path":"https://vallejosgroup.github.io/landmarkR/articles/landmarkR.html","id":"baseline-survival-analysis-without-time-varying-covariates","dir":"Articles","previous_headings":"","what":"Baseline survival analysis (without time-varying covariates)","title":"Introduction to the landmarkR package","text":"First, perform survival without time-varying covariates. can use baseline evaluate performance subsequent landmark analysis covariates. First step establish landmark times, work risk sets landmark times. Now call function fit_survival fit survival model.","code":"landmarking_object <- landmarking_object |>   compute_risk_sets(landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25))  landmarking_object #> Summary of Landmarking Object: #>   Landmarks: 365.25 730.5 1095.75 1461 1826.25  #>   Number of observations: 605  #>   Event indicator: event.status  #>   Event time: event.time  #>   Risk sets:  #>     Landmark  365.25 :  1 2 3 4 5 6 8 9 11 12  ... #>     Landmark  730.5 :  1 2 3 4 5 6 9 11 12 13  ... #>     Landmark  1095.75 :  1 2 4 6 9 12 13 15 21 22  ... #>     Landmark  1461 :  1 2 4 6 9 12 13 15 21 22  ... #>     Landmark  1826.25 :  1 2 4 6 9 13 21 26 35 38  ... landmarking_object <- landmarking_object |>   fit_survival(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     horizons = seq(from = 2*365.25, to = 6*365.25, by = 365.25),     method = \"coxph\",     dynamic_covariates = c()   )  landmarking_object@survival_fits #> $`365.25` #> Call:  method(formula = survival_formula, data = dataset) #>  #> Null model #>   log likelihood= -574.3387  #>   n= 430  #>  #> $`730.5` #> Call:  method(formula = survival_formula, data = dataset) #>  #> Null model #>   log likelihood= -240.2338  #>   n= 270  #>  #> $`1095.75` #> Call:  method(formula = survival_formula, data = dataset) #>  #> Null model #>   log likelihood= -110.9907  #>   n= 168  #>  #> $`1461` #> Call:  method(formula = survival_formula, data = dataset) #>  #> Null model #>   log likelihood= -46.43855  #>   n= 111  #>  #> $`1826.25` #> Call:  method(formula = survival_formula, data = dataset) #>  #> Null model #>   log likelihood= -6.956545  #>   n= 47"},{"path":"https://vallejosgroup.github.io/landmarkR/articles/landmarkR.html","id":"landmarking-analysis-with-lme4-coxph","dir":"Articles","previous_headings":"","what":"Landmarking analysis with lme4 + coxph","title":"Introduction to the landmarkR package","text":"Now use package lme4 fit linear mixed model time-varying covariate, dose. first step followed fitting Cox PH submodel using longitudinal predictions covariates.","code":"landmarking_object <- Landmarking(   data_static = df_static,   data_dynamic = df_dynamic,   event_indicator = \"event.status\",   dynamic_covariates = \"dose\",   ids = \"patient_id\",   event_time = \"event.time\",   times = \"times\",   measurements = \"measurements\",   dynamic_covariate_names = \"covariates\" )  landmarking_object <- landmarking_object |>   compute_risk_sets(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25)   ) landmarking_object <- landmarking_object |>   fit_longitudinal(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     method = \"lme4\",     formula = measurements ~ treat + age + gender + learn.dis + (times|patient_id)   ) |>   predict_longitudinal(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     method = \"lme4\",     allow.new.levels = TRUE   ) |>   fit_survival(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     horizons = seq(from = 2*365.25, to =6*365.25, by = 365.25),     method = \"coxph\",     dynamic_covariates = c(\"dose\")   ) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 0.107496 (tol = 0.002, component 1) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue #>  - Rescale variables? #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 0.687842 (tol = 0.002, component 1) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue #>  - Rescale variables? #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 15.9684 (tol = 0.002, component 1) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue #>  - Rescale variables?;Model is nearly unidentifiable: large eigenvalue ratio #>  - Rescale variables? #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 2.56942 (tol = 0.002, component 1) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue #>  - Rescale variables?;Model is nearly unidentifiable: large eigenvalue ratio #>  - Rescale variables? #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : #> Model failed to converge with max|grad| = 17.8403 (tol = 0.002, component 1) #> Warning in checkConv(attr(opt, \"derivs\"), opt$par, ctrl = control$checkConv, : Model is nearly unidentifiable: very large eigenvalue #>  - Rescale variables?;Model is nearly unidentifiable: large eigenvalue ratio #>  - Rescale variables?  landmarking_object@survival_fits #> $`365.25` #> Call: #> method(formula = survival_formula, data = dataset) #>  #>         coef exp(coef) se(coef)     z        p #> dose 0.27969   1.32272  0.08088 3.458 0.000544 #>  #> Likelihood ratio test=10.78  on 1 df, p=0.001028 #> n= 430, number of events= 105  #>  #> $`730.5` #> Call: #> method(formula = survival_formula, data = dataset) #>  #>         coef exp(coef) se(coef)     z       p #> dose 0.25143   1.28587  0.08165 3.079 0.00207 #>  #> Likelihood ratio test=8.34  on 1 df, p=0.003873 #> n= 270, number of events= 48  #>  #> $`1095.75` #> Call: #> method(formula = survival_formula, data = dataset) #>  #>        coef exp(coef) se(coef)    z      p #> dose 0.2259    1.2534   0.1102 2.05 0.0404 #>  #> Likelihood ratio test=3.73  on 1 df, p=0.05352 #> n= 168, number of events= 24  #>  #> $`1461` #> Call: #> method(formula = survival_formula, data = dataset) #>  #>        coef exp(coef) se(coef)    z     p #> dose 0.1476    1.1590   0.1822 0.81 0.418 #>  #> Likelihood ratio test=0.61  on 1 df, p=0.4336 #> n= 111, number of events= 11  #>  #> $`1826.25` #> Call: #> method(formula = survival_formula, data = dataset) #>  #>        coef exp(coef) se(coef)     z    p #> dose 0.2412    1.2728   0.3747 0.644 0.52 #>  #> Likelihood ratio test=0.36  on 1 df, p=0.5464 #> n= 47, number of events= 2"},{"path":"https://vallejosgroup.github.io/landmarkR/articles/landmarkR.html","id":"landmarking-analysis-with-lcmm-coxph","dir":"Articles","previous_headings":"","what":"Landmarking analysis with lcmm + coxph","title":"Introduction to the landmarkR package","text":"Now use package lcmm fit latent class mixed model time-varying covariate, dose. first step followed fitting Cox PH submodel using longitudinal predictions covariates.","code":"landmarking_object <- Landmarking(   data_static = df_static,   data_dynamic = df_dynamic,   event_indicator = \"event.status\",   dynamic_covariates = \"dose\",   ids = \"patient_id\",   event_time = \"event.time\",   times = \"times\",   measurements = \"measurements\",   dynamic_covariate_names = \"covariates\" ) landmarking_object <- landmarking_object |>   compute_risk_sets(seq(from = 365.25, to = 5*365.25, by = 365.25)) |>   fit_longitudinal(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     method = \"lcmm\",     formula = measurements ~ treat + age + gender + learn.dis,     mixture = ~treat+age+gender+learn.dis,     subject = \"patient_id\",     ng = 2   ) |>   predict_longitudinal(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     method = \"lcmm\",     subject = \"patient_id\",     avg = FALSE   ) |>   fit_survival(     landmarks = seq(from = 365.25, to = 5*365.25, by = 365.25),     horizons = seq(from = 2*365.25, to =6*365.25, by = 365.25),     method = \"coxph\",     dynamic_covariates = c(\"dose\")   )"},{"path":"https://vallejosgroup.github.io/landmarkR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nathan Constantine-Cooke. Author, maintainer. Victor Velasco-Pardo. Author. Catalina Vallejos. Author. Charlie Lees. Author.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Constantine-Cooke N, Velasco-Pardo V, Vallejos C, Lees C (2025). landmarkR: Time--Event Landmark Analysis using Array Longitudinal Survival Sub-Models. R package version 0.0.0.9000, https://vallejosgroup.github.io/landmarkR/.","code":"@Manual{,   title = {landmarkR: Time-to-Event Landmark Analysis using an Array of Longitudinal and Survival Sub-Models},   author = {Nathan Constantine-Cooke and Victor Velasco-Pardo and Catalina Vallejos and Charlie Lees},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://vallejosgroup.github.io/landmarkR/}, }"},{"path":"https://vallejosgroup.github.io/landmarkR/index.html","id":"landmarkr-","dir":"","previous_headings":"","what":"Time-to-Event Landmark Analysis using an Array of Longitudinal and Survival Sub-Models","title":"Time-to-Event Landmark Analysis using an Array of Longitudinal and Survival Sub-Models","text":"Time--event analysis using wide array longitudinal survival sub-models.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Time-to-Event Landmark Analysis using an Array of Longitudinal and Survival Sub-Models","text":"Time--event, survival analysis, used analyse time event interest occurs. Common events include hospitalisation, equipment failure, prisoner reoffending. Whilst classic survival methods assume model covariates static, often case longitudinal data collected. Two main forms survival analysis presence time-dependent covariates exist, joint models landmarkR. package focuses latter. set landmark times, survival model fitted given horizon times. landmark times, time-dependent covariates must summarised. commonly, last observation carried forward (LOCF) approach used. However, modern approach instead fit linear mixed effects model accounts observations measured error. Whilst packages already exist implement landmarkR, packages implement specific longitudinal survival models. aim landmarkR support wide array longitudinal survival sub-models using system permits others add models.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Time-to-Event Landmark Analysis using an Array of Longitudinal and Survival Sub-Models","text":"planning release package CRAN software mature. now, package can installed repository using remotes.","code":"# install.packages(\"remotes\") remotes::install_github(\"vallejosgroup/landmarkR\")"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An S4 class for a landmarking analysis — Landmarking-class","title":"An S4 class for a landmarking analysis — Landmarking-class","text":"S4 class landmarking analysis","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An S4 class for a landmarking analysis — Landmarking-class","text":"landmarks Array landmark times. data_static Data frame id, static covariates, censoring indicator event time. data_dynamic Data frame long format id, measurement, measurement time covariate measured. event_indicator Name column indicating event censoring. dynamic_covariates List whose name indicate columns biomarker measurements, values indicate columns biomarker measurement times ids Name column indicating patient id. times Name column indicating time dynamic df. measurements Name column indicating measurement values dynamic df. dynamic_covariate_names Name column indicating names dynamic covariates dynamic df. event_time Name column indicating time event/censoring. risk_sets List indices. longitudinal_fits List model fits specified landmark times biomarkers. longitudinal_predictions List model predictions specified landmark times biomarkers. survival_fits List survival model fits specified landmark times.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates an S4 class for a landmarking analysis — Landmarking","title":"Creates an S4 class for a landmarking analysis — Landmarking","text":"Creates S4 class landmarking analysis","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates an S4 class for a landmarking analysis — Landmarking","text":"","code":"Landmarking(   data_static,   data_dynamic,   event_indicator,   dynamic_covariates,   ids,   event_time,   times,   measurements,   dynamic_covariate_names )"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates an S4 class for a landmarking analysis — Landmarking","text":"data_static Data frame id, static covariates, censoring indicator event time. data_dynamic Data frame long format id, measurement, measurement time covariate measured. event_indicator Name column indicating event censoring. dynamic_covariates Names dynamic (time-varying) covariates. ids Name column indicating patient id. event_time Name column indicating time event/censoring. times Name column indicating time dynamic df. measurements Name column indicating measurement values dynamic df. dynamic_covariate_names Name column indicating names dynamic covariates dynamic df.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/Landmarking.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates an S4 class for a landmarking analysis — Landmarking","text":"object class Landmarking","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets-Landmarking-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets,Landmarking-method","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets,Landmarking-method","text":"Compute list individuals risk given landmark times, stores object class Landmarking","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets-Landmarking-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets,Landmarking-method","text":"","code":"# S4 method for class 'Landmarking' compute_risk_sets(x, landmarks, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets-Landmarking-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets,Landmarking-method","text":"x object type Landmarking landmarks Vector landmark times ... Additional arguments (used)","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets-Landmarking-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets,Landmarking-method","text":"object class Landmarking, including desired risk sets relevant landmark times.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets","text":"Compute list individuals risk given landmark times, stores object class Landmarking","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets","text":"","code":"compute_risk_sets(x, landmarks, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets","text":"x object type Landmarking landmarks Vector landmark times ... Additional arguments (used)","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/compute_risk_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute the list of individuals at risk at given landmark times, and stores them in an object of class Landmarking — compute_risk_sets","text":"object class Landmarking, including desired risk sets relevant landmark times.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/epileptic.html","id":null,"dir":"Reference","previous_headings":"","what":"Dose calibration of anti-epileptic drugs data — epileptic","title":"Dose calibration of anti-epileptic drugs data — epileptic","text":"SANAD (Standard New Anti-epileptic Drugs) study (Marson et al., 2007) randomized control trial standard new anti-epileptic drugs, comparing effects longer term clinical outcomes. data consists longitudinal measurements calibrated dose groups randomized standard drug (CBZ) new drug (LTG). objective analysis investigate effect drug titration relative effects LTG CBZ treatment failure (withdrawal randomized drug). several baseline covariates available, also data time withdrawal randomized drug. version data modified joineR package.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/epileptic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dose calibration of anti-epileptic drugs data — epileptic","text":"","code":"data(epileptic)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/epileptic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dose calibration of anti-epileptic drugs data — epileptic","text":"data frame unbalanced format, , one row per observation. data consists columns patient identifier, time measurement, calibrated dose, baseline covariates, survival data. column names identified follows: id integer: patient identifier. time integer: timing clinic visit dose recorded (days). .time integer: time drug withdrawal/maximum follow time (days). .status censoring indicator (1 = withdrawal randomized drug 0 = withdrawn randomized drug/lost follow ). dose numeric: calibrated dose. treat factor: randomized treatment (CBZ LTG). age numeric: age patient randomization (years). gender factor: gender patient. F = female, M   = male. learn.dis factor: learning disability.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/epileptic.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Dose calibration of anti-epileptic drugs data — epileptic","text":"SANAD Trial Group, University Liverpool. Data modified joineR package.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/epileptic.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dose calibration of anti-epileptic drugs data — epileptic","text":"Marson AG, Appleton R, Baker GA, et al. randomised controlled trial examining longer-term outcomes standard versus new antiepileptic drugs. SANAD Trial. Health Tech Assess. 2007; 11(37). Marson AG, Al-Kharusi , Alwaidh M, et al. SANAD study effectiveness carbamazepine, gabapentin, lamotrigine, oxcarbazepine, topiramate treatment partial epilepsy: unblinded randomised controlled trial. Lancet. 2007; 365: 2007-2013. Williamson PR, Kolamunnage-Dona R, Philipson P, Marson AG. Joint modelling longitudinal competing risks data. Stats Med. 2008; 27(30): 6426-6438.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_lcmm_.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits an LCMM model — fit_lcmm_","title":"Fits an LCMM model — fit_lcmm_","text":"Fits LCMM model","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_lcmm_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits an LCMM model — fit_lcmm_","text":"","code":"fit_lcmm_(formula, data, mixture, subject, ng, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_lcmm_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits an LCMM model — fit_lcmm_","text":"formula Two-sided linear formula fixed effects LCMM. data Dataframe data mixture One-sided formula specifying class-specific fixed effects. subject Name column indicating individual ids data ng Number clusters LCMM model ... Additional arguments passed lcmm::hlme function.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_lcmm_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits an LCMM model — fit_lcmm_","text":"object class hlme","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal-Landmarking-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal,Landmarking-method","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal,Landmarking-method","text":"Fits specified longitudinal model latent processes underlying relevant time-varying covariates, landmarking times","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal-Landmarking-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal,Landmarking-method","text":"","code":"# S4 method for class 'Landmarking' fit_longitudinal(x, landmarks, method, formula, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal-Landmarking-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal,Landmarking-method","text":"x object class Landmarking. landmarks vector Landmark times. method function fitting longitudinal data model, whose first argument formula, least argument \"data\". formula formula used longitudinal submodel fitting. ... Additional arguments passed longitudinal model fitting function (e.g. number classes/clusters lcmm).","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal-Landmarking-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal,Landmarking-method","text":"object class Landmarking.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal","text":"Fits specified longitudinal model latent processes underlying relevant time-varying covariates, landmarking times","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal","text":"","code":"fit_longitudinal(x, landmarks, method, formula, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal","text":"x object class Landmarking. landmarks vector Landmark times. method function fitting longitudinal data model, whose first argument formula, least argument \"data\". formula formula used longitudinal submodel fitting. ... Additional arguments passed longitudinal model fitting function (e.g. number classes/clusters lcmm).","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_longitudinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the specified longitudinal model for the latent processes underlying the relevant time-varying covariates, up until the landmarking times — fit_longitudinal","text":"object class Landmarking.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival-Landmarking-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival,Landmarking-method","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival,Landmarking-method","text":"Fits specified survival model landmark times horizon times specified user","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival-Landmarking-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival,Landmarking-method","text":"","code":"# S4 method for class 'Landmarking' fit_survival(x, landmarks, horizons, method, dynamic_covariates = c())"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival-Landmarking-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival,Landmarking-method","text":"x object class Landmarking. landmarks Vector landmark times horizons Vector horizon times corresponding landmark times. method Method survival analysis, either \"survfit\" \"coxph\". dynamic_covariates Vector time-varying covariates used survival model.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival-Landmarking-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival,Landmarking-method","text":"object class Landmarking.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival.html","id":null,"dir":"Reference","previous_headings":"","what":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival","text":"Fits specified survival model landmark times horizon times specified user","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival","text":"","code":"fit_survival(x, landmarks, horizons, method, dynamic_covariates = c())"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival","text":"x object class Landmarking. landmarks Vector landmark times horizons Vector horizon times corresponding landmark times. method Method survival analysis, either \"survfit\" \"coxph\". dynamic_covariates Vector time-varying covariates used survival model.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/fit_survival.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fits the specified survival model at the landmark times and up to the horizon times specified by the user — fit_survival","text":"object class Landmarking.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/landmarkR.html","id":null,"dir":"Reference","previous_headings":"","what":"landmarkR — landmarkR","title":"landmarkR — landmarkR","text":"Provides comprehensive framework conducting time--event landmarking analysis using variety longitudinal survival sub-models. aims facilitate analysis time--event data time-dependent covariates.","code":""},{"path":[]},{"path":"https://vallejosgroup.github.io/landmarkR/reference/landmarkR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"landmarkR — landmarkR","text":"Maintainer: Nathan Constantine-Cooke nathan.constantine-cooke@ed.ac.uk Authors: Victor Velasco-Pardo vvelasco@ed.ac.uk Catalina Vallejos catalina.vallejos@ed.ac.uk Charlie Lees charlie.lees@ed.ac.uk","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_lcmm_.html","id":null,"dir":"Reference","previous_headings":"","what":"Makes predictions from an LCMM model — predict_lcmm_","title":"Makes predictions from an LCMM model — predict_lcmm_","text":"Makes predictions LCMM model","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_lcmm_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Makes predictions from an LCMM model — predict_lcmm_","text":"","code":"predict_lcmm_(x, newdata, subject, avg = FALSE)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_lcmm_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Makes predictions from an LCMM model — predict_lcmm_","text":"x object class hlme. newdata dataframe containing static covariates, individual identifiers time predictions required. subject Name column newdata individual ids stored. avg Boolean indicating whether make predictions based likely cluster (FALSE, default) averaging clusters (TRUE).","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_lcmm_.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Makes predictions from an LCMM model — predict_lcmm_","text":"vector predictions.","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal-Landmarking-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal,Landmarking-method","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal,Landmarking-method","text":"Make predictions time-varying covariates specified landmark times","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal-Landmarking-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal,Landmarking-method","text":"","code":"# S4 method for class 'Landmarking' predict_longitudinal(x, landmarks, method, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal-Landmarking-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal,Landmarking-method","text":"x object class Landmarking. landmarks Vector landmark times. method Function used make predictions, whose first argument model fit, least additional argument newdata. ... Additional arguments passed prediction function (e.g. number classes/clusters lcmm).","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal-Landmarking-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal,Landmarking-method","text":"object class Landmarking","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal.html","id":null,"dir":"Reference","previous_headings":"","what":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal","text":"Make predictions time-varying covariates specified landmark times","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal","text":"","code":"predict_longitudinal(x, landmarks, method, ...)"},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal","text":"x object class Landmarking. landmarks Vector landmark times. method Longitudinal data analysis method used make predictions ... Additional arguments passed prediction function (e.g. number classes/clusters lcmm).","code":""},{"path":"https://vallejosgroup.github.io/landmarkR/reference/predict_longitudinal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make predictions for time-varying covariates at specified landmark times — predict_longitudinal","text":"object class Landmarking","code":""}]
